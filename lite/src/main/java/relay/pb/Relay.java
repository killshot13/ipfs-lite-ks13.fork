// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: relay.proto

package relay.pb;

public final class Relay {
  private Relay() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface CircuitRelayOrBuilder extends
      // @@protoc_insertion_point(interface_extends:relay.pb.CircuitRelay)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Type of the message
     * </pre>
     *
     * <code>optional .relay.pb.CircuitRelay.Type type = 1;</code>
     * @return Whether the type field is set.
     */
    boolean hasType();
    /**
     * <pre>
     * Type of the message
     * </pre>
     *
     * <code>optional .relay.pb.CircuitRelay.Type type = 1;</code>
     * @return The type.
     */
    relay.pb.Relay.CircuitRelay.Type getType();

    /**
     * <pre>
     * srcPeer and dstPeer are used when Type is HOP or STOP
     * </pre>
     *
     * <code>optional .relay.pb.CircuitRelay.Peer srcPeer = 2;</code>
     * @return Whether the srcPeer field is set.
     */
    boolean hasSrcPeer();
    /**
     * <pre>
     * srcPeer and dstPeer are used when Type is HOP or STOP
     * </pre>
     *
     * <code>optional .relay.pb.CircuitRelay.Peer srcPeer = 2;</code>
     * @return The srcPeer.
     */
    relay.pb.Relay.CircuitRelay.Peer getSrcPeer();
    /**
     * <pre>
     * srcPeer and dstPeer are used when Type is HOP or STOP
     * </pre>
     *
     * <code>optional .relay.pb.CircuitRelay.Peer srcPeer = 2;</code>
     */
    relay.pb.Relay.CircuitRelay.PeerOrBuilder getSrcPeerOrBuilder();

    /**
     * <code>optional .relay.pb.CircuitRelay.Peer dstPeer = 3;</code>
     * @return Whether the dstPeer field is set.
     */
    boolean hasDstPeer();
    /**
     * <code>optional .relay.pb.CircuitRelay.Peer dstPeer = 3;</code>
     * @return The dstPeer.
     */
    relay.pb.Relay.CircuitRelay.Peer getDstPeer();
    /**
     * <code>optional .relay.pb.CircuitRelay.Peer dstPeer = 3;</code>
     */
    relay.pb.Relay.CircuitRelay.PeerOrBuilder getDstPeerOrBuilder();

    /**
     * <pre>
     * Status code, used when Type is STATUS
     * </pre>
     *
     * <code>optional .relay.pb.CircuitRelay.Status code = 4;</code>
     * @return Whether the code field is set.
     */
    boolean hasCode();
    /**
     * <pre>
     * Status code, used when Type is STATUS
     * </pre>
     *
     * <code>optional .relay.pb.CircuitRelay.Status code = 4;</code>
     * @return The code.
     */
    relay.pb.Relay.CircuitRelay.Status getCode();
  }
  /**
   * Protobuf type {@code relay.pb.CircuitRelay}
   */
  public static final class CircuitRelay extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:relay.pb.CircuitRelay)
      CircuitRelayOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CircuitRelay.newBuilder() to construct.
    private CircuitRelay(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CircuitRelay() {
      type_ = 1;
      code_ = 100;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CircuitRelay();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CircuitRelay(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              relay.pb.Relay.CircuitRelay.Type value = relay.pb.Relay.CircuitRelay.Type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = rawValue;
              }
              break;
            }
            case 18: {
              relay.pb.Relay.CircuitRelay.Peer.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) != 0)) {
                subBuilder = srcPeer_.toBuilder();
              }
              srcPeer_ = input.readMessage(relay.pb.Relay.CircuitRelay.Peer.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(srcPeer_);
                srcPeer_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              relay.pb.Relay.CircuitRelay.Peer.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) != 0)) {
                subBuilder = dstPeer_.toBuilder();
              }
              dstPeer_ = input.readMessage(relay.pb.Relay.CircuitRelay.Peer.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dstPeer_);
                dstPeer_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              relay.pb.Relay.CircuitRelay.Status value = relay.pb.Relay.CircuitRelay.Status.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                code_ = rawValue;
              }
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return relay.pb.Relay.internal_static_relay_pb_CircuitRelay_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return relay.pb.Relay.internal_static_relay_pb_CircuitRelay_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              relay.pb.Relay.CircuitRelay.class, relay.pb.Relay.CircuitRelay.Builder.class);
    }

    /**
     * Protobuf enum {@code relay.pb.CircuitRelay.Status}
     */
    public enum Status
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS = 100;</code>
       */
      SUCCESS(100),
      /**
       * <code>HOP_SRC_ADDR_TOO_LONG = 220;</code>
       */
      HOP_SRC_ADDR_TOO_LONG(220),
      /**
       * <code>HOP_DST_ADDR_TOO_LONG = 221;</code>
       */
      HOP_DST_ADDR_TOO_LONG(221),
      /**
       * <code>HOP_SRC_MULTIADDR_INVALID = 250;</code>
       */
      HOP_SRC_MULTIADDR_INVALID(250),
      /**
       * <code>HOP_DST_MULTIADDR_INVALID = 251;</code>
       */
      HOP_DST_MULTIADDR_INVALID(251),
      /**
       * <code>HOP_NO_CONN_TO_DST = 260;</code>
       */
      HOP_NO_CONN_TO_DST(260),
      /**
       * <code>HOP_CANT_DIAL_DST = 261;</code>
       */
      HOP_CANT_DIAL_DST(261),
      /**
       * <code>HOP_CANT_OPEN_DST_STREAM = 262;</code>
       */
      HOP_CANT_OPEN_DST_STREAM(262),
      /**
       * <code>HOP_CANT_SPEAK_RELAY = 270;</code>
       */
      HOP_CANT_SPEAK_RELAY(270),
      /**
       * <code>HOP_CANT_RELAY_TO_SELF = 280;</code>
       */
      HOP_CANT_RELAY_TO_SELF(280),
      /**
       * <code>STOP_SRC_ADDR_TOO_LONG = 320;</code>
       */
      STOP_SRC_ADDR_TOO_LONG(320),
      /**
       * <code>STOP_DST_ADDR_TOO_LONG = 321;</code>
       */
      STOP_DST_ADDR_TOO_LONG(321),
      /**
       * <code>STOP_SRC_MULTIADDR_INVALID = 350;</code>
       */
      STOP_SRC_MULTIADDR_INVALID(350),
      /**
       * <code>STOP_DST_MULTIADDR_INVALID = 351;</code>
       */
      STOP_DST_MULTIADDR_INVALID(351),
      /**
       * <code>STOP_RELAY_REFUSED = 390;</code>
       */
      STOP_RELAY_REFUSED(390),
      /**
       * <code>MALFORMED_MESSAGE = 400;</code>
       */
      MALFORMED_MESSAGE(400),
      ;

      /**
       * <code>SUCCESS = 100;</code>
       */
      public static final int SUCCESS_VALUE = 100;
      /**
       * <code>HOP_SRC_ADDR_TOO_LONG = 220;</code>
       */
      public static final int HOP_SRC_ADDR_TOO_LONG_VALUE = 220;
      /**
       * <code>HOP_DST_ADDR_TOO_LONG = 221;</code>
       */
      public static final int HOP_DST_ADDR_TOO_LONG_VALUE = 221;
      /**
       * <code>HOP_SRC_MULTIADDR_INVALID = 250;</code>
       */
      public static final int HOP_SRC_MULTIADDR_INVALID_VALUE = 250;
      /**
       * <code>HOP_DST_MULTIADDR_INVALID = 251;</code>
       */
      public static final int HOP_DST_MULTIADDR_INVALID_VALUE = 251;
      /**
       * <code>HOP_NO_CONN_TO_DST = 260;</code>
       */
      public static final int HOP_NO_CONN_TO_DST_VALUE = 260;
      /**
       * <code>HOP_CANT_DIAL_DST = 261;</code>
       */
      public static final int HOP_CANT_DIAL_DST_VALUE = 261;
      /**
       * <code>HOP_CANT_OPEN_DST_STREAM = 262;</code>
       */
      public static final int HOP_CANT_OPEN_DST_STREAM_VALUE = 262;
      /**
       * <code>HOP_CANT_SPEAK_RELAY = 270;</code>
       */
      public static final int HOP_CANT_SPEAK_RELAY_VALUE = 270;
      /**
       * <code>HOP_CANT_RELAY_TO_SELF = 280;</code>
       */
      public static final int HOP_CANT_RELAY_TO_SELF_VALUE = 280;
      /**
       * <code>STOP_SRC_ADDR_TOO_LONG = 320;</code>
       */
      public static final int STOP_SRC_ADDR_TOO_LONG_VALUE = 320;
      /**
       * <code>STOP_DST_ADDR_TOO_LONG = 321;</code>
       */
      public static final int STOP_DST_ADDR_TOO_LONG_VALUE = 321;
      /**
       * <code>STOP_SRC_MULTIADDR_INVALID = 350;</code>
       */
      public static final int STOP_SRC_MULTIADDR_INVALID_VALUE = 350;
      /**
       * <code>STOP_DST_MULTIADDR_INVALID = 351;</code>
       */
      public static final int STOP_DST_MULTIADDR_INVALID_VALUE = 351;
      /**
       * <code>STOP_RELAY_REFUSED = 390;</code>
       */
      public static final int STOP_RELAY_REFUSED_VALUE = 390;
      /**
       * <code>MALFORMED_MESSAGE = 400;</code>
       */
      public static final int MALFORMED_MESSAGE_VALUE = 400;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Status valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Status forNumber(int value) {
        switch (value) {
          case 100: return SUCCESS;
          case 220: return HOP_SRC_ADDR_TOO_LONG;
          case 221: return HOP_DST_ADDR_TOO_LONG;
          case 250: return HOP_SRC_MULTIADDR_INVALID;
          case 251: return HOP_DST_MULTIADDR_INVALID;
          case 260: return HOP_NO_CONN_TO_DST;
          case 261: return HOP_CANT_DIAL_DST;
          case 262: return HOP_CANT_OPEN_DST_STREAM;
          case 270: return HOP_CANT_SPEAK_RELAY;
          case 280: return HOP_CANT_RELAY_TO_SELF;
          case 320: return STOP_SRC_ADDR_TOO_LONG;
          case 321: return STOP_DST_ADDR_TOO_LONG;
          case 350: return STOP_SRC_MULTIADDR_INVALID;
          case 351: return STOP_DST_MULTIADDR_INVALID;
          case 390: return STOP_RELAY_REFUSED;
          case 400: return MALFORMED_MESSAGE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Status>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Status> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Status>() {
              public Status findValueByNumber(int number) {
                return Status.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return relay.pb.Relay.CircuitRelay.getDescriptor().getEnumTypes().get(0);
      }

      private static final Status[] VALUES = values();

      public static Status valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Status(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:relay.pb.CircuitRelay.Status)
    }

    /**
     * <pre>
     * RPC identifier, either HOP, STOP or STATUS
     * </pre>
     *
     * Protobuf enum {@code relay.pb.CircuitRelay.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>HOP = 1;</code>
       */
      HOP(1),
      /**
       * <code>STOP = 2;</code>
       */
      STOP(2),
      /**
       * <code>STATUS = 3;</code>
       */
      STATUS(3),
      /**
       * <code>CAN_HOP = 4;</code>
       */
      CAN_HOP(4),
      ;

      /**
       * <code>HOP = 1;</code>
       */
      public static final int HOP_VALUE = 1;
      /**
       * <code>STOP = 2;</code>
       */
      public static final int STOP_VALUE = 2;
      /**
       * <code>STATUS = 3;</code>
       */
      public static final int STATUS_VALUE = 3;
      /**
       * <code>CAN_HOP = 4;</code>
       */
      public static final int CAN_HOP_VALUE = 4;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Type valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Type forNumber(int value) {
        switch (value) {
          case 1: return HOP;
          case 2: return STOP;
          case 3: return STATUS;
          case 4: return CAN_HOP;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Type> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return relay.pb.Relay.CircuitRelay.getDescriptor().getEnumTypes().get(1);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Type(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:relay.pb.CircuitRelay.Type)
    }

    public interface PeerOrBuilder extends
        // @@protoc_insertion_point(interface_extends:relay.pb.CircuitRelay.Peer)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * peer id
       * </pre>
       *
       * <code>required bytes id = 1;</code>
       * @return Whether the id field is set.
       */
      boolean hasId();
      /**
       * <pre>
       * peer id
       * </pre>
       *
       * <code>required bytes id = 1;</code>
       * @return The id.
       */
      com.google.protobuf.ByteString getId();

      /**
       * <pre>
       * peer's known addresses
       * </pre>
       *
       * <code>repeated bytes addrs = 2;</code>
       * @return A list containing the addrs.
       */
      java.util.List<com.google.protobuf.ByteString> getAddrsList();
      /**
       * <pre>
       * peer's known addresses
       * </pre>
       *
       * <code>repeated bytes addrs = 2;</code>
       * @return The count of addrs.
       */
      int getAddrsCount();
      /**
       * <pre>
       * peer's known addresses
       * </pre>
       *
       * <code>repeated bytes addrs = 2;</code>
       * @param index The index of the element to return.
       * @return The addrs at the given index.
       */
      com.google.protobuf.ByteString getAddrs(int index);
    }
    /**
     * Protobuf type {@code relay.pb.CircuitRelay.Peer}
     */
    public static final class Peer extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:relay.pb.CircuitRelay.Peer)
        PeerOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Peer.newBuilder() to construct.
      private Peer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Peer() {
        id_ = com.google.protobuf.ByteString.EMPTY;
        addrs_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Peer();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Peer(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                bitField0_ |= 0x00000001;
                id_ = input.readBytes();
                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                  addrs_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                  mutable_bitField0_ |= 0x00000002;
                }
                addrs_.add(input.readBytes());
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) != 0)) {
            addrs_ = java.util.Collections.unmodifiableList(addrs_); // C
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return relay.pb.Relay.internal_static_relay_pb_CircuitRelay_Peer_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return relay.pb.Relay.internal_static_relay_pb_CircuitRelay_Peer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                relay.pb.Relay.CircuitRelay.Peer.class, relay.pb.Relay.CircuitRelay.Peer.Builder.class);
      }

      private int bitField0_;
      public static final int ID_FIELD_NUMBER = 1;
      private com.google.protobuf.ByteString id_;
      /**
       * <pre>
       * peer id
       * </pre>
       *
       * <code>required bytes id = 1;</code>
       * @return Whether the id field is set.
       */
      @java.lang.Override
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * peer id
       * </pre>
       *
       * <code>required bytes id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getId() {
        return id_;
      }

      public static final int ADDRS_FIELD_NUMBER = 2;
      private java.util.List<com.google.protobuf.ByteString> addrs_;
      /**
       * <pre>
       * peer's known addresses
       * </pre>
       *
       * <code>repeated bytes addrs = 2;</code>
       * @return A list containing the addrs.
       */
      @java.lang.Override
      public java.util.List<com.google.protobuf.ByteString>
          getAddrsList() {
        return addrs_;
      }
      /**
       * <pre>
       * peer's known addresses
       * </pre>
       *
       * <code>repeated bytes addrs = 2;</code>
       * @return The count of addrs.
       */
      public int getAddrsCount() {
        return addrs_.size();
      }
      /**
       * <pre>
       * peer's known addresses
       * </pre>
       *
       * <code>repeated bytes addrs = 2;</code>
       * @param index The index of the element to return.
       * @return The addrs at the given index.
       */
      public com.google.protobuf.ByteString getAddrs(int index) {
        return addrs_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasId()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeBytes(1, id_);
        }
        for (int i = 0; i < addrs_.size(); i++) {
          output.writeBytes(2, addrs_.get(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, id_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < addrs_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeBytesSizeNoTag(addrs_.get(i));
          }
          size += dataSize;
          size += 1 * getAddrsList().size();
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof relay.pb.Relay.CircuitRelay.Peer)) {
          return super.equals(obj);
        }
        relay.pb.Relay.CircuitRelay.Peer other = (relay.pb.Relay.CircuitRelay.Peer) obj;

        if (hasId() != other.hasId()) return false;
        if (hasId()) {
          if (!getId()
              .equals(other.getId())) return false;
        }
        if (!getAddrsList()
            .equals(other.getAddrsList())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasId()) {
          hash = (37 * hash) + ID_FIELD_NUMBER;
          hash = (53 * hash) + getId().hashCode();
        }
        if (getAddrsCount() > 0) {
          hash = (37 * hash) + ADDRS_FIELD_NUMBER;
          hash = (53 * hash) + getAddrsList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static relay.pb.Relay.CircuitRelay.Peer parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static relay.pb.Relay.CircuitRelay.Peer parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static relay.pb.Relay.CircuitRelay.Peer parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static relay.pb.Relay.CircuitRelay.Peer parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static relay.pb.Relay.CircuitRelay.Peer parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static relay.pb.Relay.CircuitRelay.Peer parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static relay.pb.Relay.CircuitRelay.Peer parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static relay.pb.Relay.CircuitRelay.Peer parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static relay.pb.Relay.CircuitRelay.Peer parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static relay.pb.Relay.CircuitRelay.Peer parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static relay.pb.Relay.CircuitRelay.Peer parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static relay.pb.Relay.CircuitRelay.Peer parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(relay.pb.Relay.CircuitRelay.Peer prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code relay.pb.CircuitRelay.Peer}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:relay.pb.CircuitRelay.Peer)
          relay.pb.Relay.CircuitRelay.PeerOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return relay.pb.Relay.internal_static_relay_pb_CircuitRelay_Peer_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return relay.pb.Relay.internal_static_relay_pb_CircuitRelay_Peer_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  relay.pb.Relay.CircuitRelay.Peer.class, relay.pb.Relay.CircuitRelay.Peer.Builder.class);
        }

        // Construct using relay.pb.Relay.CircuitRelay.Peer.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          id_ = com.google.protobuf.ByteString.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000001);
          addrs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return relay.pb.Relay.internal_static_relay_pb_CircuitRelay_Peer_descriptor;
        }

        @java.lang.Override
        public relay.pb.Relay.CircuitRelay.Peer getDefaultInstanceForType() {
          return relay.pb.Relay.CircuitRelay.Peer.getDefaultInstance();
        }

        @java.lang.Override
        public relay.pb.Relay.CircuitRelay.Peer build() {
          relay.pb.Relay.CircuitRelay.Peer result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public relay.pb.Relay.CircuitRelay.Peer buildPartial() {
          relay.pb.Relay.CircuitRelay.Peer result = new relay.pb.Relay.CircuitRelay.Peer(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            to_bitField0_ |= 0x00000001;
          }
          result.id_ = id_;
          if (((bitField0_ & 0x00000002) != 0)) {
            addrs_ = java.util.Collections.unmodifiableList(addrs_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.addrs_ = addrs_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof relay.pb.Relay.CircuitRelay.Peer) {
            return mergeFrom((relay.pb.Relay.CircuitRelay.Peer)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(relay.pb.Relay.CircuitRelay.Peer other) {
          if (other == relay.pb.Relay.CircuitRelay.Peer.getDefaultInstance()) return this;
          if (other.hasId()) {
            setId(other.getId());
          }
          if (!other.addrs_.isEmpty()) {
            if (addrs_.isEmpty()) {
              addrs_ = other.addrs_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureAddrsIsMutable();
              addrs_.addAll(other.addrs_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          if (!hasId()) {
            return false;
          }
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          relay.pb.Relay.CircuitRelay.Peer parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (relay.pb.Relay.CircuitRelay.Peer) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.ByteString id_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <pre>
         * peer id
         * </pre>
         *
         * <code>required bytes id = 1;</code>
         * @return Whether the id field is set.
         */
        @java.lang.Override
        public boolean hasId() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * peer id
         * </pre>
         *
         * <code>required bytes id = 1;</code>
         * @return The id.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getId() {
          return id_;
        }
        /**
         * <pre>
         * peer id
         * </pre>
         *
         * <code>required bytes id = 1;</code>
         * @param value The id to set.
         * @return This builder for chaining.
         */
        public Builder setId(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          id_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * peer id
         * </pre>
         *
         * <code>required bytes id = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          id_ = getDefaultInstance().getId();
          onChanged();
          return this;
        }

        private java.util.List<com.google.protobuf.ByteString> addrs_ = java.util.Collections.emptyList();
        private void ensureAddrsIsMutable() {
          if (!((bitField0_ & 0x00000002) != 0)) {
            addrs_ = new java.util.ArrayList<com.google.protobuf.ByteString>(addrs_);
            bitField0_ |= 0x00000002;
           }
        }
        /**
         * <pre>
         * peer's known addresses
         * </pre>
         *
         * <code>repeated bytes addrs = 2;</code>
         * @return A list containing the addrs.
         */
        public java.util.List<com.google.protobuf.ByteString>
            getAddrsList() {
          return ((bitField0_ & 0x00000002) != 0) ?
                   java.util.Collections.unmodifiableList(addrs_) : addrs_;
        }
        /**
         * <pre>
         * peer's known addresses
         * </pre>
         *
         * <code>repeated bytes addrs = 2;</code>
         * @return The count of addrs.
         */
        public int getAddrsCount() {
          return addrs_.size();
        }
        /**
         * <pre>
         * peer's known addresses
         * </pre>
         *
         * <code>repeated bytes addrs = 2;</code>
         * @param index The index of the element to return.
         * @return The addrs at the given index.
         */
        public com.google.protobuf.ByteString getAddrs(int index) {
          return addrs_.get(index);
        }
        /**
         * <pre>
         * peer's known addresses
         * </pre>
         *
         * <code>repeated bytes addrs = 2;</code>
         * @param index The index to set the value at.
         * @param value The addrs to set.
         * @return This builder for chaining.
         */
        public Builder setAddrs(
            int index, com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureAddrsIsMutable();
          addrs_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * peer's known addresses
         * </pre>
         *
         * <code>repeated bytes addrs = 2;</code>
         * @param value The addrs to add.
         * @return This builder for chaining.
         */
        public Builder addAddrs(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureAddrsIsMutable();
          addrs_.add(value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * peer's known addresses
         * </pre>
         *
         * <code>repeated bytes addrs = 2;</code>
         * @param values The addrs to add.
         * @return This builder for chaining.
         */
        public Builder addAllAddrs(
            java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
          ensureAddrsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, addrs_);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * peer's known addresses
         * </pre>
         *
         * <code>repeated bytes addrs = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearAddrs() {
          addrs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:relay.pb.CircuitRelay.Peer)
      }

      // @@protoc_insertion_point(class_scope:relay.pb.CircuitRelay.Peer)
      private static final relay.pb.Relay.CircuitRelay.Peer DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new relay.pb.Relay.CircuitRelay.Peer();
      }

      public static relay.pb.Relay.CircuitRelay.Peer getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Peer>
          PARSER = new com.google.protobuf.AbstractParser<Peer>() {
        @java.lang.Override
        public Peer parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Peer(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Peer> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Peer> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public relay.pb.Relay.CircuitRelay.Peer getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     * Type of the message
     * </pre>
     *
     * <code>optional .relay.pb.CircuitRelay.Type type = 1;</code>
     * @return Whether the type field is set.
     */
    @java.lang.Override public boolean hasType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Type of the message
     * </pre>
     *
     * <code>optional .relay.pb.CircuitRelay.Type type = 1;</code>
     * @return The type.
     */
    @java.lang.Override public relay.pb.Relay.CircuitRelay.Type getType() {
      @SuppressWarnings("deprecation")
      relay.pb.Relay.CircuitRelay.Type result = relay.pb.Relay.CircuitRelay.Type.valueOf(type_);
      return result == null ? relay.pb.Relay.CircuitRelay.Type.HOP : result;
    }

    public static final int SRCPEER_FIELD_NUMBER = 2;
    private relay.pb.Relay.CircuitRelay.Peer srcPeer_;
    /**
     * <pre>
     * srcPeer and dstPeer are used when Type is HOP or STOP
     * </pre>
     *
     * <code>optional .relay.pb.CircuitRelay.Peer srcPeer = 2;</code>
     * @return Whether the srcPeer field is set.
     */
    @java.lang.Override
    public boolean hasSrcPeer() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * srcPeer and dstPeer are used when Type is HOP or STOP
     * </pre>
     *
     * <code>optional .relay.pb.CircuitRelay.Peer srcPeer = 2;</code>
     * @return The srcPeer.
     */
    @java.lang.Override
    public relay.pb.Relay.CircuitRelay.Peer getSrcPeer() {
      return srcPeer_ == null ? relay.pb.Relay.CircuitRelay.Peer.getDefaultInstance() : srcPeer_;
    }
    /**
     * <pre>
     * srcPeer and dstPeer are used when Type is HOP or STOP
     * </pre>
     *
     * <code>optional .relay.pb.CircuitRelay.Peer srcPeer = 2;</code>
     */
    @java.lang.Override
    public relay.pb.Relay.CircuitRelay.PeerOrBuilder getSrcPeerOrBuilder() {
      return srcPeer_ == null ? relay.pb.Relay.CircuitRelay.Peer.getDefaultInstance() : srcPeer_;
    }

    public static final int DSTPEER_FIELD_NUMBER = 3;
    private relay.pb.Relay.CircuitRelay.Peer dstPeer_;
    /**
     * <code>optional .relay.pb.CircuitRelay.Peer dstPeer = 3;</code>
     * @return Whether the dstPeer field is set.
     */
    @java.lang.Override
    public boolean hasDstPeer() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional .relay.pb.CircuitRelay.Peer dstPeer = 3;</code>
     * @return The dstPeer.
     */
    @java.lang.Override
    public relay.pb.Relay.CircuitRelay.Peer getDstPeer() {
      return dstPeer_ == null ? relay.pb.Relay.CircuitRelay.Peer.getDefaultInstance() : dstPeer_;
    }
    /**
     * <code>optional .relay.pb.CircuitRelay.Peer dstPeer = 3;</code>
     */
    @java.lang.Override
    public relay.pb.Relay.CircuitRelay.PeerOrBuilder getDstPeerOrBuilder() {
      return dstPeer_ == null ? relay.pb.Relay.CircuitRelay.Peer.getDefaultInstance() : dstPeer_;
    }

    public static final int CODE_FIELD_NUMBER = 4;
    private int code_;
    /**
     * <pre>
     * Status code, used when Type is STATUS
     * </pre>
     *
     * <code>optional .relay.pb.CircuitRelay.Status code = 4;</code>
     * @return Whether the code field is set.
     */
    @java.lang.Override public boolean hasCode() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Status code, used when Type is STATUS
     * </pre>
     *
     * <code>optional .relay.pb.CircuitRelay.Status code = 4;</code>
     * @return The code.
     */
    @java.lang.Override public relay.pb.Relay.CircuitRelay.Status getCode() {
      @SuppressWarnings("deprecation")
      relay.pb.Relay.CircuitRelay.Status result = relay.pb.Relay.CircuitRelay.Status.valueOf(code_);
      return result == null ? relay.pb.Relay.CircuitRelay.Status.SUCCESS : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasSrcPeer()) {
        if (!getSrcPeer().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasDstPeer()) {
        if (!getDstPeer().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(1, type_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getSrcPeer());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(3, getDstPeer());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeEnum(4, code_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSrcPeer());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getDstPeer());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, code_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof relay.pb.Relay.CircuitRelay)) {
        return super.equals(obj);
      }
      relay.pb.Relay.CircuitRelay other = (relay.pb.Relay.CircuitRelay) obj;

      if (hasType() != other.hasType()) return false;
      if (hasType()) {
        if (type_ != other.type_) return false;
      }
      if (hasSrcPeer() != other.hasSrcPeer()) return false;
      if (hasSrcPeer()) {
        if (!getSrcPeer()
            .equals(other.getSrcPeer())) return false;
      }
      if (hasDstPeer() != other.hasDstPeer()) return false;
      if (hasDstPeer()) {
        if (!getDstPeer()
            .equals(other.getDstPeer())) return false;
      }
      if (hasCode() != other.hasCode()) return false;
      if (hasCode()) {
        if (code_ != other.code_) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
      }
      if (hasSrcPeer()) {
        hash = (37 * hash) + SRCPEER_FIELD_NUMBER;
        hash = (53 * hash) + getSrcPeer().hashCode();
      }
      if (hasDstPeer()) {
        hash = (37 * hash) + DSTPEER_FIELD_NUMBER;
        hash = (53 * hash) + getDstPeer().hashCode();
      }
      if (hasCode()) {
        hash = (37 * hash) + CODE_FIELD_NUMBER;
        hash = (53 * hash) + code_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static relay.pb.Relay.CircuitRelay parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static relay.pb.Relay.CircuitRelay parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static relay.pb.Relay.CircuitRelay parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static relay.pb.Relay.CircuitRelay parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static relay.pb.Relay.CircuitRelay parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static relay.pb.Relay.CircuitRelay parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static relay.pb.Relay.CircuitRelay parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static relay.pb.Relay.CircuitRelay parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static relay.pb.Relay.CircuitRelay parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static relay.pb.Relay.CircuitRelay parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static relay.pb.Relay.CircuitRelay parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static relay.pb.Relay.CircuitRelay parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(relay.pb.Relay.CircuitRelay prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code relay.pb.CircuitRelay}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:relay.pb.CircuitRelay)
        relay.pb.Relay.CircuitRelayOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return relay.pb.Relay.internal_static_relay_pb_CircuitRelay_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return relay.pb.Relay.internal_static_relay_pb_CircuitRelay_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                relay.pb.Relay.CircuitRelay.class, relay.pb.Relay.CircuitRelay.Builder.class);
      }

      // Construct using relay.pb.Relay.CircuitRelay.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSrcPeerFieldBuilder();
          getDstPeerFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 1;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (srcPeerBuilder_ == null) {
          srcPeer_ = null;
        } else {
          srcPeerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (dstPeerBuilder_ == null) {
          dstPeer_ = null;
        } else {
          dstPeerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        code_ = 100;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return relay.pb.Relay.internal_static_relay_pb_CircuitRelay_descriptor;
      }

      @java.lang.Override
      public relay.pb.Relay.CircuitRelay getDefaultInstanceForType() {
        return relay.pb.Relay.CircuitRelay.getDefaultInstance();
      }

      @java.lang.Override
      public relay.pb.Relay.CircuitRelay build() {
        relay.pb.Relay.CircuitRelay result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public relay.pb.Relay.CircuitRelay buildPartial() {
        relay.pb.Relay.CircuitRelay result = new relay.pb.Relay.CircuitRelay(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          if (srcPeerBuilder_ == null) {
            result.srcPeer_ = srcPeer_;
          } else {
            result.srcPeer_ = srcPeerBuilder_.build();
          }
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          if (dstPeerBuilder_ == null) {
            result.dstPeer_ = dstPeer_;
          } else {
            result.dstPeer_ = dstPeerBuilder_.build();
          }
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          to_bitField0_ |= 0x00000008;
        }
        result.code_ = code_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof relay.pb.Relay.CircuitRelay) {
          return mergeFrom((relay.pb.Relay.CircuitRelay)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(relay.pb.Relay.CircuitRelay other) {
        if (other == relay.pb.Relay.CircuitRelay.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasSrcPeer()) {
          mergeSrcPeer(other.getSrcPeer());
        }
        if (other.hasDstPeer()) {
          mergeDstPeer(other.getDstPeer());
        }
        if (other.hasCode()) {
          setCode(other.getCode());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (hasSrcPeer()) {
          if (!getSrcPeer().isInitialized()) {
            return false;
          }
        }
        if (hasDstPeer()) {
          if (!getDstPeer().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        relay.pb.Relay.CircuitRelay parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (relay.pb.Relay.CircuitRelay) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int type_ = 1;
      /**
       * <pre>
       * Type of the message
       * </pre>
       *
       * <code>optional .relay.pb.CircuitRelay.Type type = 1;</code>
       * @return Whether the type field is set.
       */
      @java.lang.Override public boolean hasType() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Type of the message
       * </pre>
       *
       * <code>optional .relay.pb.CircuitRelay.Type type = 1;</code>
       * @return The type.
       */
      @java.lang.Override
      public relay.pb.Relay.CircuitRelay.Type getType() {
        @SuppressWarnings("deprecation")
        relay.pb.Relay.CircuitRelay.Type result = relay.pb.Relay.CircuitRelay.Type.valueOf(type_);
        return result == null ? relay.pb.Relay.CircuitRelay.Type.HOP : result;
      }
      /**
       * <pre>
       * Type of the message
       * </pre>
       *
       * <code>optional .relay.pb.CircuitRelay.Type type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(relay.pb.Relay.CircuitRelay.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Type of the message
       * </pre>
       *
       * <code>optional .relay.pb.CircuitRelay.Type type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 1;
        onChanged();
        return this;
      }

      private relay.pb.Relay.CircuitRelay.Peer srcPeer_;
      private com.google.protobuf.SingleFieldBuilderV3<
          relay.pb.Relay.CircuitRelay.Peer, relay.pb.Relay.CircuitRelay.Peer.Builder, relay.pb.Relay.CircuitRelay.PeerOrBuilder> srcPeerBuilder_;
      /**
       * <pre>
       * srcPeer and dstPeer are used when Type is HOP or STOP
       * </pre>
       *
       * <code>optional .relay.pb.CircuitRelay.Peer srcPeer = 2;</code>
       * @return Whether the srcPeer field is set.
       */
      public boolean hasSrcPeer() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * srcPeer and dstPeer are used when Type is HOP or STOP
       * </pre>
       *
       * <code>optional .relay.pb.CircuitRelay.Peer srcPeer = 2;</code>
       * @return The srcPeer.
       */
      public relay.pb.Relay.CircuitRelay.Peer getSrcPeer() {
        if (srcPeerBuilder_ == null) {
          return srcPeer_ == null ? relay.pb.Relay.CircuitRelay.Peer.getDefaultInstance() : srcPeer_;
        } else {
          return srcPeerBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * srcPeer and dstPeer are used when Type is HOP or STOP
       * </pre>
       *
       * <code>optional .relay.pb.CircuitRelay.Peer srcPeer = 2;</code>
       */
      public Builder setSrcPeer(relay.pb.Relay.CircuitRelay.Peer value) {
        if (srcPeerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          srcPeer_ = value;
          onChanged();
        } else {
          srcPeerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * srcPeer and dstPeer are used when Type is HOP or STOP
       * </pre>
       *
       * <code>optional .relay.pb.CircuitRelay.Peer srcPeer = 2;</code>
       */
      public Builder setSrcPeer(
          relay.pb.Relay.CircuitRelay.Peer.Builder builderForValue) {
        if (srcPeerBuilder_ == null) {
          srcPeer_ = builderForValue.build();
          onChanged();
        } else {
          srcPeerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * srcPeer and dstPeer are used when Type is HOP or STOP
       * </pre>
       *
       * <code>optional .relay.pb.CircuitRelay.Peer srcPeer = 2;</code>
       */
      public Builder mergeSrcPeer(relay.pb.Relay.CircuitRelay.Peer value) {
        if (srcPeerBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
              srcPeer_ != null &&
              srcPeer_ != relay.pb.Relay.CircuitRelay.Peer.getDefaultInstance()) {
            srcPeer_ =
              relay.pb.Relay.CircuitRelay.Peer.newBuilder(srcPeer_).mergeFrom(value).buildPartial();
          } else {
            srcPeer_ = value;
          }
          onChanged();
        } else {
          srcPeerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * srcPeer and dstPeer are used when Type is HOP or STOP
       * </pre>
       *
       * <code>optional .relay.pb.CircuitRelay.Peer srcPeer = 2;</code>
       */
      public Builder clearSrcPeer() {
        if (srcPeerBuilder_ == null) {
          srcPeer_ = null;
          onChanged();
        } else {
          srcPeerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <pre>
       * srcPeer and dstPeer are used when Type is HOP or STOP
       * </pre>
       *
       * <code>optional .relay.pb.CircuitRelay.Peer srcPeer = 2;</code>
       */
      public relay.pb.Relay.CircuitRelay.Peer.Builder getSrcPeerBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getSrcPeerFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * srcPeer and dstPeer are used when Type is HOP or STOP
       * </pre>
       *
       * <code>optional .relay.pb.CircuitRelay.Peer srcPeer = 2;</code>
       */
      public relay.pb.Relay.CircuitRelay.PeerOrBuilder getSrcPeerOrBuilder() {
        if (srcPeerBuilder_ != null) {
          return srcPeerBuilder_.getMessageOrBuilder();
        } else {
          return srcPeer_ == null ?
              relay.pb.Relay.CircuitRelay.Peer.getDefaultInstance() : srcPeer_;
        }
      }
      /**
       * <pre>
       * srcPeer and dstPeer are used when Type is HOP or STOP
       * </pre>
       *
       * <code>optional .relay.pb.CircuitRelay.Peer srcPeer = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          relay.pb.Relay.CircuitRelay.Peer, relay.pb.Relay.CircuitRelay.Peer.Builder, relay.pb.Relay.CircuitRelay.PeerOrBuilder> 
          getSrcPeerFieldBuilder() {
        if (srcPeerBuilder_ == null) {
          srcPeerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              relay.pb.Relay.CircuitRelay.Peer, relay.pb.Relay.CircuitRelay.Peer.Builder, relay.pb.Relay.CircuitRelay.PeerOrBuilder>(
                  getSrcPeer(),
                  getParentForChildren(),
                  isClean());
          srcPeer_ = null;
        }
        return srcPeerBuilder_;
      }

      private relay.pb.Relay.CircuitRelay.Peer dstPeer_;
      private com.google.protobuf.SingleFieldBuilderV3<
          relay.pb.Relay.CircuitRelay.Peer, relay.pb.Relay.CircuitRelay.Peer.Builder, relay.pb.Relay.CircuitRelay.PeerOrBuilder> dstPeerBuilder_;
      /**
       * <code>optional .relay.pb.CircuitRelay.Peer dstPeer = 3;</code>
       * @return Whether the dstPeer field is set.
       */
      public boolean hasDstPeer() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional .relay.pb.CircuitRelay.Peer dstPeer = 3;</code>
       * @return The dstPeer.
       */
      public relay.pb.Relay.CircuitRelay.Peer getDstPeer() {
        if (dstPeerBuilder_ == null) {
          return dstPeer_ == null ? relay.pb.Relay.CircuitRelay.Peer.getDefaultInstance() : dstPeer_;
        } else {
          return dstPeerBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .relay.pb.CircuitRelay.Peer dstPeer = 3;</code>
       */
      public Builder setDstPeer(relay.pb.Relay.CircuitRelay.Peer value) {
        if (dstPeerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dstPeer_ = value;
          onChanged();
        } else {
          dstPeerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .relay.pb.CircuitRelay.Peer dstPeer = 3;</code>
       */
      public Builder setDstPeer(
          relay.pb.Relay.CircuitRelay.Peer.Builder builderForValue) {
        if (dstPeerBuilder_ == null) {
          dstPeer_ = builderForValue.build();
          onChanged();
        } else {
          dstPeerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .relay.pb.CircuitRelay.Peer dstPeer = 3;</code>
       */
      public Builder mergeDstPeer(relay.pb.Relay.CircuitRelay.Peer value) {
        if (dstPeerBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
              dstPeer_ != null &&
              dstPeer_ != relay.pb.Relay.CircuitRelay.Peer.getDefaultInstance()) {
            dstPeer_ =
              relay.pb.Relay.CircuitRelay.Peer.newBuilder(dstPeer_).mergeFrom(value).buildPartial();
          } else {
            dstPeer_ = value;
          }
          onChanged();
        } else {
          dstPeerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .relay.pb.CircuitRelay.Peer dstPeer = 3;</code>
       */
      public Builder clearDstPeer() {
        if (dstPeerBuilder_ == null) {
          dstPeer_ = null;
          onChanged();
        } else {
          dstPeerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .relay.pb.CircuitRelay.Peer dstPeer = 3;</code>
       */
      public relay.pb.Relay.CircuitRelay.Peer.Builder getDstPeerBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getDstPeerFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .relay.pb.CircuitRelay.Peer dstPeer = 3;</code>
       */
      public relay.pb.Relay.CircuitRelay.PeerOrBuilder getDstPeerOrBuilder() {
        if (dstPeerBuilder_ != null) {
          return dstPeerBuilder_.getMessageOrBuilder();
        } else {
          return dstPeer_ == null ?
              relay.pb.Relay.CircuitRelay.Peer.getDefaultInstance() : dstPeer_;
        }
      }
      /**
       * <code>optional .relay.pb.CircuitRelay.Peer dstPeer = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          relay.pb.Relay.CircuitRelay.Peer, relay.pb.Relay.CircuitRelay.Peer.Builder, relay.pb.Relay.CircuitRelay.PeerOrBuilder> 
          getDstPeerFieldBuilder() {
        if (dstPeerBuilder_ == null) {
          dstPeerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              relay.pb.Relay.CircuitRelay.Peer, relay.pb.Relay.CircuitRelay.Peer.Builder, relay.pb.Relay.CircuitRelay.PeerOrBuilder>(
                  getDstPeer(),
                  getParentForChildren(),
                  isClean());
          dstPeer_ = null;
        }
        return dstPeerBuilder_;
      }

      private int code_ = 100;
      /**
       * <pre>
       * Status code, used when Type is STATUS
       * </pre>
       *
       * <code>optional .relay.pb.CircuitRelay.Status code = 4;</code>
       * @return Whether the code field is set.
       */
      @java.lang.Override public boolean hasCode() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Status code, used when Type is STATUS
       * </pre>
       *
       * <code>optional .relay.pb.CircuitRelay.Status code = 4;</code>
       * @return The code.
       */
      @java.lang.Override
      public relay.pb.Relay.CircuitRelay.Status getCode() {
        @SuppressWarnings("deprecation")
        relay.pb.Relay.CircuitRelay.Status result = relay.pb.Relay.CircuitRelay.Status.valueOf(code_);
        return result == null ? relay.pb.Relay.CircuitRelay.Status.SUCCESS : result;
      }
      /**
       * <pre>
       * Status code, used when Type is STATUS
       * </pre>
       *
       * <code>optional .relay.pb.CircuitRelay.Status code = 4;</code>
       * @param value The code to set.
       * @return This builder for chaining.
       */
      public Builder setCode(relay.pb.Relay.CircuitRelay.Status value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        code_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Status code, used when Type is STATUS
       * </pre>
       *
       * <code>optional .relay.pb.CircuitRelay.Status code = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearCode() {
        bitField0_ = (bitField0_ & ~0x00000008);
        code_ = 100;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:relay.pb.CircuitRelay)
    }

    // @@protoc_insertion_point(class_scope:relay.pb.CircuitRelay)
    private static final relay.pb.Relay.CircuitRelay DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new relay.pb.Relay.CircuitRelay();
    }

    public static relay.pb.Relay.CircuitRelay getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CircuitRelay>
        PARSER = new com.google.protobuf.AbstractParser<CircuitRelay>() {
      @java.lang.Override
      public CircuitRelay parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CircuitRelay(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CircuitRelay> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CircuitRelay> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public relay.pb.Relay.CircuitRelay getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_relay_pb_CircuitRelay_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_relay_pb_CircuitRelay_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_relay_pb_CircuitRelay_Peer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_relay_pb_CircuitRelay_Peer_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013relay.proto\022\010relay.pb\"\336\005\n\014CircuitRelay" +
      "\022)\n\004type\030\001 \001(\0162\033.relay.pb.CircuitRelay.T" +
      "ype\022,\n\007srcPeer\030\002 \001(\0132\033.relay.pb.CircuitR" +
      "elay.Peer\022,\n\007dstPeer\030\003 \001(\0132\033.relay.pb.Ci" +
      "rcuitRelay.Peer\022+\n\004code\030\004 \001(\0162\035.relay.pb" +
      ".CircuitRelay.Status\032!\n\004Peer\022\n\n\002id\030\001 \002(\014" +
      "\022\r\n\005addrs\030\002 \003(\014\"\302\003\n\006Status\022\013\n\007SUCCESS\020d\022" +
      "\032\n\025HOP_SRC_ADDR_TOO_LONG\020\334\001\022\032\n\025HOP_DST_A" +
      "DDR_TOO_LONG\020\335\001\022\036\n\031HOP_SRC_MULTIADDR_INV" +
      "ALID\020\372\001\022\036\n\031HOP_DST_MULTIADDR_INVALID\020\373\001\022" +
      "\027\n\022HOP_NO_CONN_TO_DST\020\204\002\022\026\n\021HOP_CANT_DIA" +
      "L_DST\020\205\002\022\035\n\030HOP_CANT_OPEN_DST_STREAM\020\206\002\022" +
      "\031\n\024HOP_CANT_SPEAK_RELAY\020\216\002\022\033\n\026HOP_CANT_R" +
      "ELAY_TO_SELF\020\230\002\022\033\n\026STOP_SRC_ADDR_TOO_LON" +
      "G\020\300\002\022\033\n\026STOP_DST_ADDR_TOO_LONG\020\301\002\022\037\n\032STO" +
      "P_SRC_MULTIADDR_INVALID\020\336\002\022\037\n\032STOP_DST_M" +
      "ULTIADDR_INVALID\020\337\002\022\027\n\022STOP_RELAY_REFUSE" +
      "D\020\206\003\022\026\n\021MALFORMED_MESSAGE\020\220\003\"2\n\004Type\022\007\n\003" +
      "HOP\020\001\022\010\n\004STOP\020\002\022\n\n\006STATUS\020\003\022\013\n\007CAN_HOP\020\004"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_relay_pb_CircuitRelay_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_relay_pb_CircuitRelay_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_relay_pb_CircuitRelay_descriptor,
        new java.lang.String[] { "Type", "SrcPeer", "DstPeer", "Code", });
    internal_static_relay_pb_CircuitRelay_Peer_descriptor =
      internal_static_relay_pb_CircuitRelay_descriptor.getNestedTypes().get(0);
    internal_static_relay_pb_CircuitRelay_Peer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_relay_pb_CircuitRelay_Peer_descriptor,
        new java.lang.String[] { "Id", "Addrs", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
